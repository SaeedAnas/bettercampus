/* Site classes */
.icon-button--info {
  visibility: hidden;
}

/* Chrome, Safari, Edge, Opera */
input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
  -webkit-appearance: none;
  width: auto;
  margin: 0;
}

/* Firefox */
input[type="number"] {
  -moz-appearance: textfield;
  width: auto;
}

/* assignment component */

.assignment-list {
  list-style-type: none;
  padding: 0;
  margin: 0;
}

.assignment {
  margin-left: 1rem;
  /* align-items: center; */
  /* display: flex; */
  /* justify-content: space-between; */
}

.assignment-form {
  align-items: center;
  display: flex;
  justify-content: space-between;
}

.grade-input {
  align-items: center;
}

li.assignment + li.assignment {
  border-top: 1px solid #e1e1e1;
}

.text-input {
  padding: 12px 0;
  margin: 8px 0;
  box-sizing: border-box;
}

/* buttons */
.assignment-buttons {
  padding-right: 0.5rem;
}

.grade-button {
  transition: 0.3s;
}

.grade-button:focus {
  outline: none;
}

.add-button i:hover {
  color: #50c878;
}

.remove-button i:hover {
  color: #e84118;
}

.grade-icon {
  padding: 0.5rem;
}

.header-icon {
  padding: 0.5rem;
  padding-right: 0;
}

/* A smarter person's CSS for resizeable inputs (https://css-tricks.com/auto-growing-inputs-textareas) */
*,
*::before,
*::after {
  box-sizing: border-box;
}
.input-sizer {
  display: inline-grid;
  vertical-align: top;
  align-items: center;
  position: relative;
  border: solid 1px;
  padding: 0.25em 0.5em;
  margin: 5px;
}
.input-sizer.stacked {
  padding: 0.5em;
  align-items: stretch;
}
.input-sizer.stacked::after,
.input-sizer.stacked input,
.input-sizer.stacked textarea {
  grid-area: 2;
}
.input-sizer::after,
.input-sizer input,
.input-sizer textarea {
  width: auto;
  min-width: 1em;
  grid-area: 0.5;
  font: inherit;
  padding: 0.25em;
  margin: 0;
  resize: none;
  background: none;
  appearance: none;
  border: none;
}
.input-sizer span {
  padding: 0.25em;
}
.input-sizer::after {
  content: attr(data-value) " ";
  visibility: hidden;
  white-space: pre-wrap;
}
.input-sizer:focus-within {
  outline: solid 1px blue;
  box-shadow: 4px 4px 0px blue;
}
.input-sizer:focus-within > span {
  color: blue;
}
.input-sizer:focus-within textarea:focus,
.input-sizer:focus-within input:focus {
  outline: none;
}
.input-sizer {
  box-shadow: 4px 4px 0px #000;
}
.input-sizer > span {
  text-transform: uppercase;
  font-size: 0.8em;
  font-weight: bold;
  text-shadow: 2px 2px 0 rgba(0, 0, 0, 0.15);
}
